#!/usr/bin/env ruby

require 'json'
require './lib/http_server.rb'
require './lib/blog_controller.rb'

PAGE_NAME = "PJ's Site" # The name of the site

server = HTTPServer.new
controller = BlogController.new
loop do
  server.serve do |socket|
    STDERR.puts "#{socket.request[:method]} #{socket.request[:path]} #{socket.request[:client_type]}"

    if(socket.request[:path].end_with?(*HTTPServer::MIME_TYPES.keys))
      socket.serve_file(socket.request[:path])
    elsif(socket.request[:path] == '/new_blog_post')
      if(socket.request[:method] == 'POST')
        elements = HTTPServer.parse_form_data(socket.socket.read(socket.request[:headers]['Content-Length'].to_i))
        errors = controller.validate_post(elements)
        unless(errors == {})
          socket.socket.print "HTTP/1.1 409 Conflict\r\n\r\n#{errors.to_json}\r\n\r\n"
        else
          controller.insert_new_post(elements)
          socket.socket.print "HTTP/1.1 201 Created\r\nLocation: /#{elements['slug']}\r\n\r\n/#{elements['slug']}\r\n\r\n"
        end
      else
        socket.serve_404
      end
    elsif(socket.request[:path].start_with? '/validate')
      data = HTTPServer.parse_form_data(socket.request[:path].split("?")[1])
      socket.socket.print "HTTP/1.1 200 OK\r\n\r\n#{controller.validate_post(data)[data.keys[0].to_sym].nil?}\r\n\r\n"
    else
      socket.socket.print controller.respond(socket.request[:path])
    end
  end
end
